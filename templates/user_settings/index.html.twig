{% extends 'base.html.twig' %}

{% block title %}
    {{ app.user.fname }} {{ app.user.lname }}
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <!-- Toastr CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
{% endblock %}

{% block body %}
    <div class="settings-wrapper" data-theme="dark">
        <!-- Sidebar Navigation -->
        <aside class="settings-sidebar">
            <div class="sidebar-header">
                <h3>Paramètres</h3>
            </div>
            <nav class="sidebar-nav">
                <a href="{{ path('app_dashboard') }}" class="nav-item">
                    <i class="bi bi-speedometer2"></i>
                    <span>Tableau de bord</span>
                </a>
                <a href="{{ path('app_user_settings') }}" class="nav-item active">
                    <i class="bi bi-gear"></i>
                    <span>Paramètres</span>
                </a>
                <a href="#" class="nav-item">
                    <i class="bi bi-headset"></i>
                    <span>Support</span>
                </a>
            </nav>
        </aside>

        <!-- Main Content -->
        <main class="settings-content">
            <!-- Profile Section -->
            <section class="profile-section" id="profile-section">
                <div class="profile-header">
                    <h2>Profil</h2>
                    <p>Gérez vos informations personnelles et vos préférences.</p>
                </div>

                <div class="profile-grid">
                    <!-- Avatar Upload -->
                    <div class="avatar-card">
                        <turbo-frame id="avatar-frame">
                            <form id="avatarForm" action="{{ path('app_user_settings_update') }}" method="POST" enctype="multipart/form-data" data-turbo-method="post">
                                <div class="avatar-preview">
                                    <img src="{{ app.user.photo }}" alt="Avatar" id="profileImage">
                                    <label class="avatar-edit">
                                        <i class="bi bi-camera"></i>
                                        <input type="file" id="avatarUpload" name="avatarUpload" accept="image/*" class="hidden-input">
                                    </label>
                                </div>
                                <button type="submit" class="btn-save hidden" id="avatarUpdateBtn">Mettre à jour</button>
                            </form>
                        </turbo-frame>
                    </div>

                    <!-- Personal Info Form -->
                    <div class="form-card">
                        <h4>Informations personnelles</h4>
                        <turbo-frame id="personal-info-frame">
                            <form action="{{ path('app_user_settings_update') }}" method="POST" data-turbo-method="post">
                                <div class="form-group">
                                    <label for="username">Nom d'utilisateur</label>
                                    <input type="text" id="username" name="username" value="{{ app.user.username }}" required>
                                </div>
                                <div class="form-group">
                                    <label for="email">Email</label>
                                    <input type="email" id="email" name="email" value="{{ app.user.email }}" required>
                                </div>
                                <button type="submit" class="btn-save">Sauvegarder</button>
                            </form>
                        </turbo-frame>
                    </div>
                </div>
            </section>

            <!-- Security Section -->
            <section class="security-section" id="security-section">
                <h4>Sécurité du compte</h4>
                <div class="form-card">
                    <turbo-frame id="security-frame">
                        <form action="{{ path('app_user_settings_update') }}" method="POST" data-turbo-method="post">
                            <div class="form-group">
                                <label for="currentPassword">Mot de passe actuel</label>
                                <input type="password" id="currentPassword" name="currentPassword" required>
                            </div>
                            <div class="form-group">
                                <label for="newPassword">Nouveau mot de passe</label>
                                <input type="password" id="newPassword" name="newPassword" required>
                            </div>
                            <div class="form-group">
                                <label for="confirmPassword">Confirmer le mot de passe</label>
                                <input type="password" id="confirmPassword" name="confirmPassword" required>
                            </div>
                            <button type="submit" class="btn-save">Changer le mot de passe</button>
                        </form>
                    </turbo-frame>
                </div>
            </section>

            <!-- Notifications Section -->
            <section class="notifications-section" id="notifications-section">
                <h4>Préférences de notifications</h4>
                <div class="form-card">
                    <turbo-frame id="notifications-frame">
                        <form action="{{ path('app_user_settings_update') }}" method="POST" data-turbo-method="post">
                            <div class="form-group toggle-group">
                                <label>Notifications par email</label>
                                <label class="switch">
                                    <input type="checkbox" name="emailNotifications" {% if app.user.emailNotifications %}checked{% endif %}>
                                    <span class="slider"></span>
                                </label>
                            </div>
                            <div class="form-group toggle-group">
                                <label>Notifications push</label>
                                <label class="switch">
                                    <input type="checkbox" name="pushNotifications">
                                    <span class="slider"></span>
                                </label>
                            </div>
                            <button type="submit" class="btn-save">Enregistrer</button>
                        </form>
                    </turbo-frame>
                </div>
            </section>
        </main>
    </div>

    {# Vous pouvez garder vos styles et scripts existants #}
    <style>
        /* (Votre CSS inchangé) */
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const avatarInput = document.getElementById('avatarUpload');
            const avatarUpdateBtn = document.getElementById('avatarUpdateBtn');
            const avatarForm = document.getElementById('avatarForm');
            
            avatarInput.addEventListener('change', function(e) {
                if (this.files && this.files[0]) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        document.getElementById('profileImage').src = e.target.result;
                        avatarUpdateBtn.classList.remove('hidden');
                    };
                    reader.readAsDataURL(this.files[0]);
                }
            });

            // Gestion de l'indicateur de chargement Turbo
            document.addEventListener('turbo:submit-start', () => {
                const loadingIndicator = document.createElement('div');
                loadingIndicator.id = 'loading-indicator';
                loadingIndicator.innerText = 'Chargement...';
                loadingIndicator.style.position = 'fixed';
                loadingIndicator.style.top = '1rem';
                loadingIndicator.style.right = '1rem';
                loadingIndicator.style.background = 'var(--primary-color)';
                loadingIndicator.style.color = 'white';
                loadingIndicator.style.padding = '0.5rem 1rem';
                loadingIndicator.style.borderRadius = '0.5rem';
                document.body.appendChild(loadingIndicator);
            });

            document.addEventListener('turbo:submit-end', () => {
                const loadingIndicator = document.getElementById('loading-indicator');
                if (loadingIndicator) {
                    loadingIndicator.remove();
                }
            });

            // Empêcher la soumission du formulaire d'avatar si aucun fichier n'est sélectionné
            if (avatarForm) {
                avatarForm.addEventListener('submit', function(e) {
                    if (avatarInput.files.length === 0) {
                        e.preventDefault();
                        return;
                    }
                });
            }
        });

        // Réinitialise les formulaires après soumission réussie (exemple Turbo)
        document.addEventListener('turbo:frame-render', (event) => {
            const frame = event.target;
            if (frame.querySelector('.form-success-flash')) {
                setTimeout(() => {
                    const successFlash = frame.querySelector('.form-success-flash');
                    if (successFlash) {
                        successFlash.style.opacity = '0';
                        setTimeout(() => {
                            successFlash.remove();
                        }, 300);
                    }
                }, 3000);
            }
        });
    </script>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <!-- Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            toastr.options = {
                "closeButton": true,
                "progressBar": true,
                "positionClass": "toast-top-right"
            };

            {% for type, messages in app.flashes %}
                {% for message in messages %}
                    {% if type == 'success' %}
                        toastr.success("{{ message|e('js') }}");
                    {% elseif type == 'danger' %}
                        toastr.error("{{ message|e('js') }}");
                    {% else %}
                        toastr.info("{{ message|e('js') }}");
                    {% endif %}
                {% endfor %}
            {% endfor %}
        });
    </script>
{% endblock %}