{# user_settings/index.html.twig #}

{% extends 'base.html.twig' %}

{% block title %}
	{{ app.user.fname }}
	{{ app.user.lname }}
{% endblock %}

{% block stylesheets %}
	{{ parent() }}
	<!-- Toastr CSS -->
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
	<style>:root
	{
		--primary-color: #6366f1;
		--primary-hover: #818cf8;
		--background-dark: #0f172a;
		--background-light: #1e293b;
		--border-color: #334155;
		--text-color: #f8fafc;
	}

	body {
		background-color: var(--background-dark);
		color: var(--text-color);
		font-family: 'Inter', sans-serif;
	}

	.settings-wrapper {
		display: flex;
		min-height: 100vh;
	}

	.settings-sidebar {
		width: 280px;
		background: var(--background-light);
		padding: 2rem;
		border-right: 1px solid var(--border-color);
	}

	.sidebar-header h3 {
		font-size: 1.5rem;
		font-weight: 600;
		margin-bottom: 2rem;
		color: var(--text-color);
	}

	.sidebar-nav {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
	}

	.nav-item {
		display: flex;
		align-items: center;
		gap: 1rem;
		padding: 0.75rem 1rem;
		border-radius: 0.5rem;
		color: var(--text-color);
		text-decoration: none;
		transition: all 0.2s ease;
	}

	.nav-item:hover {
		background: rgba(255, 255, 255, 0.05);
	}

	.nav-item.active {
		background: var(--primary-color);
		color: white;
	}

	.settings-content {
		flex: 1;
		padding: 2rem;
	}

	.profile-section,
	.security-section,
	.notifications-section {
		margin-bottom: 2rem;
	}

	.profile-header h2 {
		font-size: 2rem;
		font-weight: 600;
		margin-bottom: 0.5rem;
	}

	.profile-header p {
		color: #94a3b8;
	}

	.profile-grid {
		display: grid;
		grid-template-columns: 240px 1fr;
		gap: 2rem;
		margin-top: 2rem;
	}

	.avatar-card {
		background: var(--background-light);
		padding: 1.5rem;
		border-radius: 1rem;
		border: 1px solid var(--border-color);
		text-align: center;
	}

	.avatar-preview {
		position: relative;
		width: 150px;
		height: 150px;
		margin: 0 auto 1rem;
		border-radius: 50%;
	}

	.avatar-preview img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		border-radius: 50%;
		border: 2px solid var(--primary-color);
	}

	.avatar-edit {
		position: absolute;
		bottom: 0;
		right: 0;
		background: var(--background-dark);
		width: 40px;
		height: 40px;
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		border: 2px solid var(--primary-color);
		cursor: pointer;
		transition: transform 0.3s ease;
	}

	.avatar-edit:hover {
		transform: scale(1.1);
	}

	.avatar-edit i {
		font-size: 1.2rem;
		color: var(--primary-color);
	}

	.hidden-input {
		display: none;
	}

	.btn-save {
		background: var(--primary-color);
		color: white;
		padding: 0.75rem 1.5rem;
		border: none;
		border-radius: 0.5rem;
		cursor: pointer;
		transition: background 0.2s ease;
		width: 100%;
	}

	.btn-save:hover {
		background: var(--primary-hover);
	}

	.btn-save.hidden {
		display: none;
	}

	.form-card {
		background: var(--background-light);
		padding: 1.5rem;
		border-radius: 1rem;
		border: 1px solid var(--border-color);
	}

	.form-group {
		margin-bottom: 1.5rem;
	}

	.form-group label {
		display: block;
		margin-bottom: 0.5rem;
		font-weight: 500;
		color: #94a3b8;
	}

	.form-group input {
		width: 100%;
		padding: 0.75rem;
		background: var(--background-dark);
		border: 1px solid var(--border-color);
		border-radius: 0.5rem;
		color: var(--text-color);
		font-size: 1rem;
	}

	.toggle-group {
		display: flex;
		align-items: center;
		justify-content: space-between;
	}

	.switch {
		position: relative;
		display: inline-block;
		width: 48px;
		height: 24px;
	}

	.switch input {
		opacity: 0;
		width: 0;
		height: 0;
	}

	.slider {
		position: absolute;
		cursor: pointer;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: #475569;
		border-radius: 24px;
		transition: 0.3s;
	}

	.slider:before {
		position: absolute;
		content: "";
		height: 20px;
		width: 20px;
		left: 2px;
		bottom: 2px;
		background: white;
		border-radius: 50%;
		transition: 0.3s;
	}

	input:checked + .slider {
		background: var(--primary-color);
	}

	input:checked + .slider:before {
		transform: translateX(24px);
	}

	.invalid-feedback {
		color: #ef4444;
		font-size: 0.875rem;
		margin-top: 0.25rem;
	}

	.is-invalid {
		border-color: #ef4444 !important;
	}

	@media(max-width: 768px) {
		.settings-wrapper {
			flex-direction: column;
		}

		.settings-sidebar {
			width: 100%;
			border-right: none;
			padding: 1rem;
		}

		.profile-grid {
			grid-template-columns: 1fr;
		}
	}
</style>
{% endblock %}

{% block body %}
<div class="settings-wrapper" data-theme="dark">
	<aside class="settings-sidebar">
		<div class="sidebar-header">
			<h3>Paramètres</h3>
		</div>
		<nav class="sidebar-nav">
			<a href="{{ path('app_dashboard') }}" class="nav-item">
				<i class="bi bi-speedometer2"></i>
				<span>Tableau de bord</span>
			</a>
			<a href="{{ path('app_user_settings') }}" class="nav-item active">
				<i class="bi bi-gear"></i>
				<span>Paramètres</span>
			</a>
			<a href="#" class="nav-item">
				<i class="bi bi-headset"></i>
				<span>Support</span>
			</a>
		</nav>
	</aside>

	<main class="settings-content">
		<div id="flash-messages"></div>

		<section class="profile-section" id="profile-section">
			<div class="profile-grid">
				<div class="avatar-card">
					<form id="avatarForm" action="{{ path('app_user_settings_update') }}" method="POST" enctype="multipart/form-data" data-turbo-method="post">
						<input type="hidden" name="_csrf_token" value="{{ csrf_token('update_settings') }}">
						<div class="avatar-preview">
							{% if app.user.googleId and app.user.photo starts with 'http' %}
								<img src="{{ app.user.photo }}" class="profile-avatar">
							{% else %}
								<img src="{{ vich_uploader_asset(app.user, 'imageFile') }}" alt="Avatar" id="profileImage">
							{% endif %}
							<label class="avatar-edit">
								<i class="bi bi-camera"></i>
								<input type="file" id="avatarUpload" name="imageFile" accept="image/*" class="hidden-input">
							</label>
						</div>
						<button type="submit" class="btn-save hidden" id="avatarUpdateBtn">Mettre à jour</button>
					</form>
				</div>

				<div class="form-card">
					<h4>Informations personnelles</h4>
					<form action="{{ path('app_user_settings_update') }}" method="POST" data-turbo-method="post">
						<input type="hidden" name="_csrf_token" value="{{ csrf_token('update_settings') }}">
						<div class="form-group">
							<label for="username">Nom d'utilisateur</label>
							<input type="text" id="username" name="username" value="{{ app.user.username }}" required>
						</div>
						<div class="form-group">
							<label for="email">Email</label>
							<input type="email" id="email" name="email" value="{{ app.user.email }}" required>
						</div>
						<button type="submit" class="btn-save">Sauvegarder</button>
					</form>
				</div>
			</div>
		</section>

		<section class="security-section" id="security-section">
			<h4>Sécurité du compte</h4>
			<div class="form-card">
				<form action="{{ path('app_user_settings_update') }}" method="POST" data-turbo-method="post">
					<input type="hidden" name="_csrf_token" value="{{ csrf_token('update_settings') }}">
					<div class="form-group">
						<label for="currentPassword">Mot de passe actuel</label>
						<input type="password" id="currentPassword" name="currentPassword" required>
					</div>
					<div class="form-group">
						<label for="newPassword">Nouveau mot de passe</label>
						<input type="password" id="newPassword" name="newPassword" required>
					</div>
					<div class="form-group">
						<label for="confirmPassword">Confirmer le mot de passe</label>
						<input type="password" id="confirmPassword" name="confirmPassword" required>
					</div>
					<button type="submit" class="btn-save">Changer le mot de passe</button>
				</form>
			</div>
		</section>

		<section class="notifications-section" id="notifications-section">
			<h4>Préférences de notifications</h4>
			<div class="form-card">
				<form action="{{ path('app_user_settings_update') }}" method="POST" data-turbo-method="post">
					<input type="hidden" name="_csrf_token" value="{{ csrf_token('update_settings') }}">
					<div class="form-group toggle-group">
						<label>Notifications par email</label>
						<label class="switch">
							<input type="checkbox" name="emailNotifications" {% if app.user.emailNotifications %} checked {% endif %}>
							<span class="slider"></span>
						</label>
					</div>
					<div class="form-group toggle-group">
						<label>Notifications push</label>
						<label class="switch">
							<input type="checkbox" name="pushNotifications">
							<span class="slider"></span>
						</label>
					</div>
					<button type="submit" class="btn-save">Enregistrer</button>
				</form>
			</div>
		</section>
	</main>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const avatarInput = document.getElementById('avatarUpload');
        const avatarUpdateBtn = document.getElementById('avatarUpdateBtn');

        // Gestion du changement d'avatar
        if (avatarInput) {
            avatarInput.addEventListener('change', function(e) {
                if (this.files && this.files[0]) {
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        document.getElementById('profileImage').src = e.target.result;
                        if (avatarUpdateBtn) {
                            avatarUpdateBtn.classList.remove('hidden');
                        }
                    };
                    reader.readAsDataURL(this.files[0]);
                }
            });
        }
    });
</script>
{% endblock %}

{% block customScript %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        toastr.options = {
            closeButton: true,
            progressBar: true,
            positionClass: 'toast-top-right',
            preventDuplicates: true
        };

        // Gestion des flash messages Symfony
        {% for type, messages in app.flashes %}
            {% for message in messages %}
                toastr.{{ type }}("{{ message|e('js') }}");
            {% endfor %}
        {% endfor %}
    });
</script>
{% endblock %}