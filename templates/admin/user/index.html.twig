{# admin/user/index.html.twig #}
{% extends 'admin.html.twig' %}

{% block title %}Liste des Utilisateurs{% endblock %}

{% block body %}
<div class="card">
  <div class="card-datatable pt-0">
    <table class="datatables-basic table table-bordered">
      <thead>
        <tr>
          <th></th>
          <th></th>
          <th>Id</th>
          <th>Nom</th>
          <th>Email</th>
          <th>Solde</th>
          <th>Rôles</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        {% for user in users %}
          <tr>
            <td></td>
            <td></td>
            <td>{{ user.id }}</td>
            <td>
              <div class="d-flex justify-content-start align-items-center">
                <div class="avatar-wrapper">
                  <div class="avatar me-2">
                    <span class="avatar-initial rounded-circle bg-label-primary">
                      {{ user.fname|first|upper }}{{ user.lname|first|upper }}
                    </span>
                  </div>
                </div>
                <div class="d-flex flex-column">
                  <span class="emp_name text-truncate">{{ user.fname }} {{ user.lname }}</span>
                </div>
              </div>
            </td>
            <td>{{ user.email }}</td>
            <td>{{ user.balance|format_currency('USD') }}</td>
            <td>
              <span class="badge rounded-pill bg-{{ 'ROLE_ADMIN' in user.roles ? 'danger' : 'primary' }}">
                {{ 'ROLE_ADMIN' in user.roles ? 'Administrateur' : 'Utilisateur' }}
              </span>
            </td>
            <td>
              <div class="d-inline-block">
                <a href="{{ path('admin_user_show', {'id': user.id}) }}" class="btn btn-sm text-primary btn-icon item-edit">
                  <i class="bx bx-show"></i>
                </a>
                <a href="{{ path('admin_user_edit', {'id': user.id}) }}" class="btn btn-sm text-primary btn-icon item-edit">
                  <i class="bx bxs-edit"></i>
                </a>
                <a href="javascript:;" 
                   class="btn btn-sm text-danger btn-icon delete-record" 
                   onclick="confirmDelete(event, {{ user.id }})">
                  <i class="bx bx-trash"></i>
                </a>
              </div>
            </td>
          </tr>
        {% else %}
          <tr>
            <td colspan="8" class="text-center">Aucun utilisateur trouvé</td>
          </tr>
        {% endfor %}
      </tbody>
    </table>
  </div>
</div>

<!-- Add new user modal (optional) -->
<div class="modal fade" id="addNewUser" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Ajouter un nouvel utilisateur</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <a href="{{ path('admin_user_new') }}" class="btn btn-primary w-100">
          <i class="bx bx-plus me-1"></i> Créer un nouvel utilisateur
        </a>
      </div>
    </div>
  </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
  $(function() {
    'use strict';

    var dt_basic_table = $('.datatables-basic');

    if (dt_basic_table.length) {
      var dt_basic = dt_basic_table.DataTable({
        responsive: true,
        language: {
          url: 'https://cdn.datatables.net/plug-ins/1.11.5/i18n/fr-FR.json'
        },
        order: [[2, 'desc']],
        dom:
          '<"card-header"<"head-label"><"dt-action-buttons text-end"B>><"d-flex justify-content-between align-items-center row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6"f>>t<"d-flex justify-content-between row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        displayLength: 10,
        lengthMenu: [10, 25, 50, 75, 100],
        buttons: [
          {
            extend: 'collection',
            className: 'btn btn-label-primary dropdown-toggle me-2',
            text: '<i class="bx bx-export me-1"></i>Exporter',
            buttons: [
              {
                extend: 'print',
                text: '<i class="bx bx-printer me-1"></i>Imprimer',
                className: 'dropdown-item',
                exportOptions: { columns: [2, 3, 4, 5, 6] }
              },
              {
                extend: 'csv',
                text: '<i class="bx bx-file me-1"></i>CSV',
                className: 'dropdown-item',
                exportOptions: { columns: [2, 3, 4, 5, 6] }
              },
              {
                extend: 'excel',
                text: '<i class="bx bx-file me-1"></i>Excel',
                className: 'dropdown-item',
                exportOptions: { columns: [2, 3, 4, 5, 6] }
              },
              {
                extend: 'pdf',
                text: '<i class="bx bxs-file-pdf me-1"></i>PDF',
                className: 'dropdown-item',
                exportOptions: { columns: [2, 3, 4, 5, 6] }
              },
              {
                extend: 'copy',
                text: '<i class="bx bx-copy me-1"></i>Copier',
                className: 'dropdown-item',
                exportOptions: { columns: [2, 3, 4, 5, 6] }
              }
            ]
          },
          {
            text: '<i class="bx bx-plus me-1"></i>Nouvel utilisateur',
            className: 'create-new btn btn-primary',
            action: function() {
              $('#addNewUser').modal('show');
            }
          }
        ],
        columnDefs: [
          {
            // For Responsive
            className: 'control',
            orderable: false,
            responsivePriority: 2,
            searchable: false,
            targets: 0,
            render: function() {
              return '';
            }
          },
          {
            // For Checkboxes
            targets: 1,
            orderable: false,
            responsivePriority: 3,
            searchable: false,
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            },
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input">';
            }
          },
          {
            targets: 2,
            visible: true
          },
          {
            responsivePriority: 1,
            targets: 4
          },
          {
            // Actions
            targets: -1,
            title: 'Actions',
            orderable: false,
            searchable: false
          }
        ],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return 'Détails de ' + data[3];
              }
            }),
            type: 'column',
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== ''
                  ? '<tr data-dt-row="' +
                      col.rowIndex +
                      '" data-dt-column="' +
                      col.columnIndex +
                      '">' +
                      '<td>' +
                      col.title +
                      ':' +
                      '</td> ' +
                      '<td>' +
                      col.data +
                      '</td>' +
                      '</tr>'
                  : '';
              }).join('');

              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
      
      $('div.head-label').html('<h5 class="card-title mb-0">Liste des Utilisateurs</h5>');
    }
  });

  function confirmDelete(event, userId) {
    event.preventDefault();
    event.stopPropagation();
    
    Swal.fire({
      title: 'Êtes-vous sûr?',
      text: "Vous ne pourrez pas annuler cette action!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Oui, supprimer!',
      cancelButtonText: 'Annuler',
      customClass: {
        confirmButton: 'btn btn-primary me-3',
        cancelButton: 'btn btn-label-secondary'
      },
      buttonsStyling: false
    }).then((result) => {
      if (result.isConfirmed) {
        // Create a form and submit it
        const form = document.createElement('form');
        form.method = 'post';
        form.action = '/admin/user/' + userId + '/delete';
        
        const csrfToken = document.createElement('input');
        csrfToken.type = 'hidden';
        csrfToken.name = '_token';
        csrfToken.value = '{{ csrf_token('delete' ~ 'USER_ID') }}'.replace('USER_ID', userId);
        
        form.appendChild(csrfToken);
        document.body.appendChild(form);
        form.submit();
      }
    });
  }
</script>
{% endblock %}