{% extends 'admin.html.twig' %}

{% block title %}Transactions{% endblock %}

{% block body %}
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Historique des transactions</h5>
        <div class="d-flex">
            <button class="btn btn-primary btn-sm me-2" data-bs-toggle="modal" data-bs-target="#filterModal">
                <i class="mdi mdi-filter-variant me-1"></i> Filtrer
            </button>
            <div class="btn-group">
                <button type="button" class="btn btn-success btn-sm dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="mdi mdi-export me-1"></i> Exporter
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li><a class="dropdown-item export-action" href="#" data-type="csv"><i class="mdi mdi-file-delimited me-2"></i>CSV</a></li>
                    <li><a class="dropdown-item export-action" href="#" data-type="excel"><i class="mdi mdi-file-excel me-2"></i>Excel</a></li>
                    <li><a class="dropdown-item export-action" href="#" data-type="pdf"><i class="mdi mdi-file-pdf me-2"></i>PDF</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item export-action" href="#" data-type="print"><i class="mdi mdi-printer me-2"></i>Imprimer</a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover datatable">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Utilisateur</th>
                        <th>Montant</th>
                        <th>Méthode</th>
                        <th>Statut</th>
                        <th>Type</th>
                        <th>Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                {% for transaction in transactions %}
                    <tr>
                        <td>{{ transaction.id }}</td>
                        <td>
                            <a href="{{ path('admin_user_show', {'id': transaction.user.id}) }}" class="text-primary">
                                {{ transaction.user.email }}
                            </a>
                        </td>
                        <td class="{{ transaction.type == 'withdrawal' ? 'text-danger' : 'text-success' }} fw-bold">
                            {{ (transaction.type == 'withdrawal' ? '-' : '+') ~ transaction.amount|format_currency('USD') }}
                        </td>
                        <td>
                            {% set method_icons = {
                                'card': 'mdi-credit-card',
                                'paypal': 'mdi-paypal',
                                'transfer': 'mdi-bank-transfer',
                                'crypto': 'mdi-currency-btc'
                            } %}
                            <i class="mdi {{ method_icons[transaction.method] ?? 'mdi-cash' }} me-1"></i>
                            {{ transaction.method|capitalize }}
                        </td>
                        <td>
                            <span class="badge bg-{{ transaction.status == 'completed' ? 'success' : 
                                (transaction.status == 'failed' ? 'danger' : 'warning') }}">
                                {{ transaction.status|capitalize }}
                            </span>
                        </td>
                        <td>
                            <span class="badge bg-{{ transaction.type == 'deposit' ? 'info' : 'primary' }}">
                                {{ transaction.type|capitalize }}
                            </span>
                        </td>
                        <td data-order="{{ transaction.createdAt|date('Y-m-d H:i:s') }}">{{ transaction.createdAt|date('d/m/Y H:i') }}</td>
                        <td>
                            <button class="btn btn-sm btn-icon btn-outline-primary" title="Détails">
                                <i class="mdi mdi-eye-outline"></i>
                            </button>
                            {% if transaction.status != 'completed' %}
                                <button class="btn btn-sm btn-icon btn-outline-success" title="Valider">
                                    <i class="mdi mdi-check"></i>
                                </button>
                            {% endif %}
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="8" class="text-center">Aucune transaction trouvée</td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal de filtrage -->
<div class="modal fade" id="filterModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Filtrer les transactions</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="filterForm">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Statut</label>
                            <select class="form-select" name="status">
                                <option value="">Tous les statuts</option>
                                <option value="pending">En attente</option>
                                <option value="completed">Complété</option>
                                <option value="failed">Échoué</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Type</label>
                            <select class="form-select" name="type">
                                <option value="">Tous les types</option>
                                <option value="deposit">Dépôt</option>
                                <option value="withdrawal">Retrait</option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Date de début</label>
                            <input type="date" class="form-control" name="start_date">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Date de fin</label>
                            <input type="date" class="form-control" name="end_date">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Méthode de paiement</label>
                        <select class="form-select" name="method">
                            <option value="">Toutes les méthodes</option>
                            <option value="card">Carte</option>
                            <option value="paypal">PayPal</option>
                            <option value="transfer">Virement</option>
                            <option value="crypto">Crypto</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-label-secondary" id="resetFilters">Réinitialiser</button>
                <button type="button" class="btn btn-primary" id="applyFilters">Appliquer</button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.print.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
<script>
    $(document).ready(function() {
        // Initialisation de DataTables avec les boutons d'export
        if (!$.fn.DataTable.isDataTable('.datatable')) {
            var table = $('.datatable').DataTable({
                responsive: true,
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.11.5/i18n/fr-FR.json'
                },
                order: [[6, 'desc']], // Tri par date décroissante par défaut
                dom: '<"row"<"col-md-6"B><"col-md-6"f>><"row"<"col-md-12"rt>><"row"<"col-md-5"i><"col-md-7"p>>',
                pageLength: 25,
                buttons: [
                    {
                        extend: 'csv',
                        text: '<i class="mdi mdi-file-delimited me-1"></i> CSV',
                        className: 'btn btn-label-primary me-2',
                        exportOptions: {
                            columns: ':not(:last-child)',
                            format: {
                                body: function (data, row, column, node) {
                                    // Nettoyer le texte pour l'export
                                    return data.replace(/<[^>]*>/g, '').trim();
                                }
                            },
                            orthogonal: 'export'
                        },
                        filename: 'transactions_' + new Date().toISOString().slice(0, 10)
                    },
                    {
                        extend: 'excel',
                        text: '<i class="mdi mdi-file-excel me-1"></i> Excel',
                        className: 'btn btn-label-success me-2',
                        exportOptions: {
                            columns: ':not(:last-child)',
                            format: {
                                body: function (data, row, column, node) {
                                    return data.replace(/<[^>]*>/g, '').trim();
                                }
                            },
                            orthogonal: 'export'
                        },
                        filename: 'transactions_' + new Date().toISOString().slice(0, 10),
                        customize: function(xlsx) {
                            var sheet = xlsx.xl.worksheets['sheet1.xml'];
                            $('row c[r^="C"]', sheet).attr('s', '2'); // Style monétaire pour colonne Montant
                        }
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="mdi mdi-file-pdf me-1"></i> PDF',
                        className: 'btn btn-label-danger me-2',
                        exportOptions: {
                            columns: ':not(:last-child)',
                            format: {
                                body: function (data, row, column, node) {
                                    return data.replace(/<[^>]*>/g, '').trim();
                                }
                            },
                            orthogonal: 'export'
                        },
                        filename: 'transactions_' + new Date().toISOString().slice(0, 10),
                        customize: function(doc) {
                            doc.defaultStyle.fontSize = 9;
                            doc.styles.tableHeader.fontSize = 10;
                            doc.styles.tableHeader.fillColor = '#2b2c40';
                            doc.pageMargins = [20, 40, 20, 40];
                            doc.content[0].table.widths = ['auto', '*', 'auto', 'auto', 'auto', 'auto', 'auto'];
                            
                            // Ajouter un en-tête personnalisé
                            doc.header = function(currentPage, pageCount) {
                                return {
                                    text: 'Historique des transactions - Page ' + currentPage + ' sur ' + pageCount,
                                    alignment: 'center',
                                    margin: [20, 20],
                                    fontSize: 9
                                };
                            };
                        }
                    },
                    {
                        extend: 'print',
                        text: '<i class="mdi mdi-printer me-1"></i> Imprimer',
                        className: 'btn btn-label-info',
                        exportOptions: {
                            columns: ':not(:last-child)',
                            format: {
                                body: function (data, row, column, node) {
                                    return data.replace(/<[^>]*>/g, '').trim();
                                }
                            },
                            orthogonal: 'export'
                        },
                        customize: function(win) {
                            $(win.document.body).css('font-size', '10pt');
                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                        }
                    }
                ],
                columnDefs: [
                    { 
                        orderable: false, 
                        targets: [7],
                        searchable: false
                    },
                    {
                        type: 'date-euro',
                        targets: 6
                    },
                    {
                        targets: 2,
                        render: function(data, type, row) {
                            if (type === 'export') {
                                return data.replace(/<[^>]*>/g, '');
                            }
                            return data;
                        }
                    }
                ],
                initComplete: function() {
                    // Masquer les boutons d'export natifs (nous utilisons notre menu déroulant)
                    this.api().buttons().container().addClass('d-none');
                }
            });

            // Gestion des exports via le menu déroulant
            $('.export-action').click(function(e) {
                e.preventDefault();
                var type = $(this).data('type');
                if (type === 'csv') {
                    table.button('.buttons-csv').trigger();
                } else if (type === 'excel') {
                    table.button('.buttons-excel').trigger();
                } else if (type === 'pdf') {
                    table.button('.buttons-pdf').trigger();
                } else if (type === 'print') {
                    table.button('.buttons-print').trigger();
                }
            });

            // Gestion des filtres
            $('#applyFilters').click(function() {
                var status = $('select[name="status"]').val();
                var type = $('select[name="type"]').val();
                var method = $('select[name="method"]').val();
                var startDate = $('input[name="start_date"]').val();
                var endDate = $('input[name="end_date"]').val();
                
                // Filtre par statut (colonne 4)
                table.column(4).search(status).draw();
                
                // Filtre par type (colonne 5)
                table.column(5).search(type).draw();
                
                // Filtre par méthode (colonne 3)
                table.column(3).search(method).draw();
                
                // Filtre par plage de dates (colonne 6)
                if (startDate || endDate) {
                    $.fn.dataTable.ext.search.push(
                        function(settings, data, dataIndex) {
                            var date = new Date(data[6]);
                            var start = startDate ? new Date(startDate) : null;
                            var end = endDate ? new Date(endDate) : null;
                            
                            if ((start === null || date >= start) && 
                                (end === null || date <= end)) {
                                return true;
                            }
                            return false;
                        }
                    );
                    table.draw();
                    $.fn.dataTable.ext.search.pop();
                } else {
                    table.column(6).search('').draw();
                }
                
                $('#filterModal').modal('hide');
            });

            // Réinitialisation des filtres
            $('#resetFilters').click(function() {
                $('#filterForm')[0].reset();
                table.search('').columns().search('').draw();
            });

            // Gestion des boutons d'action
            $('.datatable').on('click', '.btn-outline-success', function() {
                const tr = $(this).closest('tr');
                const id = table.row(tr).data()[0];
                
                Swal.fire({
                    title: 'Confirmer la validation',
                    text: "Voulez-vous vraiment valider cette transaction?",
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Oui, valider',
                    cancelButtonText: 'Annuler',
                    customClass: {
                        confirmButton: 'btn btn-primary me-3',
                        cancelButton: 'btn btn-label-secondary'
                    },
                    buttonsStyling: false
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Ici, ajouter l'appel AJAX pour valider la transaction
                        Toast.fire({
                            icon: 'success',
                            title: 'Transaction validée avec succès'
                        });
                        tr.find('.badge.bg-warning').removeClass('bg-warning').addClass('bg-success').text('Completed');
                        $(this).remove();
                    }
                });
            });
        }
    });
</script>
{% endblock %}