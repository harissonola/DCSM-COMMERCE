{% extends 'admin.html.twig' %}

{% block title %}Gestion des produits{% endblock %}

{% block body %}
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Liste des produits</h5>
        <div class="d-flex">
            <a href="{{ path('admin_product_new') }}" class="btn btn-primary me-2">
                <i class="mdi mdi-plus me-1"></i> Nouveau produit
            </a>
            <button class="btn btn-success" id="exportDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="mdi mdi-export me-1"></i> Exporter
            </button>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="exportDropdown">
                <li><a class="dropdown-item export-btn" href="#" data-type="csv"><i class="mdi mdi-file-delimited me-2"></i>CSV</a></li>
                <li><a class="dropdown-item export-btn" href="#" data-type="excel"><i class="mdi mdi-file-excel me-2"></i>Excel</a></li>
                <li><a class="dropdown-item export-btn" href="#" data-type="pdf"><i class="mdi mdi-file-pdf me-2"></i>PDF</a></li>
            </ul>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover datatable">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Nom</th>
                        <th>Prix</th>
                        <th>Boutique</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                {% for product in products %}
                    <tr>
                        <td>{{ product.id }}</td>
                        <td>{{ product.name }}</td>
                        <td>{{ product.price|format_currency('USD') }}</td>
                        <td>{{ product.shop ? product.shop.name : 'Aucune' }}</td>
                        <td>
                            <div class="d-flex">
                                <a href="{{ path('admin_product_show', {'id': product.id}) }}" class="btn btn-sm btn-info me-2">
                                    <i class="mdi mdi-eye"></i>
                                </a>
                                <a href="{{ path('admin_product_edit', {'id': product.id}) }}" class="btn btn-sm btn-warning me-2">
                                    <i class="mdi mdi-pencil"></i>
                                </a>
                                <form method="post" action="{{ path('admin_product_delete', {'id': product.id}) }}">
                                    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ product.id) }}">
                                    <button class="btn btn-sm btn-danger" onclick="return confirmDelete(event)">
                                        <i class="mdi mdi-delete"></i>
                                    </button>
                                </form>
                            </div>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="5" class="text-center">Aucun produit trouvé</td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
<script>
    $(document).ready(function() {
        // Initialisation de DataTables
        if (!$.fn.DataTable.isDataTable('.datatable')) {
            var table = $('.datatable').DataTable({
                responsive: true,
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.11.5/i18n/fr-FR.json'
                },
                dom: '<"top"f>rt<"bottom"lip><"clear">',
                pageLength: 25,
                buttons: [
                    {
                        extend: 'csv',
                        text: '<i class="mdi mdi-file-delimited"></i> CSV',
                        className: 'btn btn-outline-primary me-2',
                        exportOptions: {
                            columns: ':not(:last-child)',
                            format: {
                                body: function (data, row, column, node) {
                                    // Nettoyer le texte pour l'export
                                    return data.replace(/<[^>]*>/g, '').trim();
                                }
                            }
                        }
                    },
                    {
                        extend: 'excel',
                        text: '<i class="mdi mdi-file-excel"></i> Excel',
                        className: 'btn btn-outline-success me-2',
                        exportOptions: {
                            columns: ':not(:last-child)',
                            format: {
                                body: function (data, row, column, node) {
                                    return data.replace(/<[^>]*>/g, '').trim();
                                }
                            }
                        }
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="mdi mdi-file-pdf"></i> PDF',
                        className: 'btn btn-outline-danger',
                        exportOptions: {
                            columns: ':not(:last-child)',
                            format: {
                                body: function (data, row, column, node) {
                                    return data.replace(/<[^>]*>/g, '').trim();
                                }
                            }
                        },
                        customize: function(doc) {
                            doc.defaultStyle.fontSize = 8;
                            doc.styles.tableHeader.fontSize = 9;
                            doc.pageMargins = [10, 10, 10, 10];
                        }
                    }
                ],
                columnDefs: [
                    { 
                        orderable: false, 
                        targets: [4] // Désactive le tri sur la colonne Actions
                    }
                ]
            });

            // Gestion du menu déroulant d'export
            $('.export-btn').click(function(e) {
                e.preventDefault();
                var type = $(this).data('type');
                if (type === 'csv') {
                    table.button('.buttons-csv').trigger();
                } else if (type === 'excel') {
                    table.button('.buttons-excel').trigger();
                } else if (type === 'pdf') {
                    table.button('.buttons-pdf').trigger();
                }
            });

            // Ajout des boutons d'export dans le DOM (masqués)
            table.buttons().container()
                .appendTo('.datatable_wrapper .col-md-6:eq(0)')
                .addClass('d-none');
        }

        function confirmDelete(event) {
            event.preventDefault();
            var form = event.target.closest('form');
            
            Swal.fire({
                title: 'Confirmer la suppression',
                text: "Êtes-vous sûr de vouloir supprimer ce produit?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Oui, supprimer',
                cancelButtonText: 'Annuler',
                customClass: {
                    confirmButton: 'btn btn-primary me-3',
                    cancelButton: 'btn btn-label-secondary'
                },
                buttonsStyling: false
            }).then((result) => {
                if (result.isConfirmed) {
                    form.submit();
                }
            });
        }
    });
</script>
{% endblock %}