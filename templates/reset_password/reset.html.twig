{% extends 'base.html.twig' %}

{% block title %}Réinitialiser votre mot de passe
{% endblock %}

{% block body %}
	<div
		class="password-reset-wrapper">
		<!-- Background animé -->
		<div class="auth-bg">
			<div class="gradient"></div>
			<div class="particles"></div>
		</div>

		<div
			class="password-reset-container">
			<!-- Carte de réinitialisation -->
			<div
				class="auth-card">
				<!-- Logo -->
				<div class="auth-logo mb-4">
					<img src="https://raw.githubusercontent.com/harissonola/my-cdn/main/img/bactrary-logo.png" alt="Logo" class="logo-img">
				</div>

				<h1 class="auth-title">Nouveau mot de passe</h1>
				<p class="auth-subtitle">Entrez votre nouveau mot de passe ci-dessous</p>

				{{ form_start(resetForm, {'attr': {'class': 'auth-form'}}) }}
				<div class="form-group">
					<div class="password-input">
						{{ form_widget(resetForm.plainPassword.first, {'attr': {
				  'class': 'form-control',
				  'placeholder': ' ',
				  'autocomplete': 'new-password'
				}}) }}
						<label for="{{ resetForm.plainPassword.first.vars.id }}">Nouveau mot de passe</label>
						<button type="button" class="toggle-password">
							<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewbox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
								<path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
								<circle cx="12" cy="12" r="3"></circle>
							</svg>
						</button>
						<div class="password-strength"></div>
					</div>
				</div>

				<div class="form-group">
					<div class="password-input">
						{{ form_widget(resetForm.plainPassword.second, {'attr': {
				  'class': 'form-control',
				  'placeholder': ' ',
				  'autocomplete': 'new-password'
				}}) }}
						<label for="{{ resetForm.plainPassword.second.vars.id }}">Confirmez le mot de passe</label>
						<button type="button" class="toggle-password">
							<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewbox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
								<path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
								<circle cx="12" cy="12" r="3"></circle>
							</svg>
						</button>
						<div class="password-strength"></div>
					</div>
				</div>

				<button type="submit" class="btn-auth">
					<span>Réinitialiser</span>
					<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewbox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
						<path d="M22 2L11 13"></path>
						<polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
					</svg>
				</button>
				{{ form_end(resetForm) }}
			</div>
		</div>
	</div>

	<style>:root
	{
		--primary: #6c5ce7;
		--primary-light: #a29bfe;
		--primary-dark: #5649c0;
		--error: #ff6b6b;
		--success: #00b894;
		--text: #ffffff;
		--text-light: #d1d1d1;
		--bg-dark: #121212;
		--bg-darker: #0f0f0f;
		--card-bg: rgba(30, 30, 30, 0.95);
		--input-bg: rgba(40, 40, 40, 0.9);
		--input-border: rgba(255, 255, 255, 0.1);
	}

	/* Structure de base */
	.password-reset-wrapper {
		min-height: 100vh;
		display: flex;
		align-items: center;
		justify-content: center;
		background: linear-gradient(135deg, var(--bg-darker) 0%, var(--bg-dark) 100%);
		color: var(--text);
		position: relative;
		overflow: hidden;
	}

	/* Background animé */
	.auth-bg {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: 0;
	}

	.gradient {
		position: absolute;
		width: 100%;
		height: 100%;
		background: linear-gradient(135deg, var(--bg-darker) 0%, var(--bg-dark) 100%);
	}

	.particles {
		position: absolute;
		width: 100%;
		height: 100%;
		background-image: radial-gradient(circle at 20% 30%, rgba(108, 92, 231, 0.15) 0%, transparent 25%), radial-gradient(circle at 80% 70%, rgba(0, 206, 201, 0.15) 0%, transparent 25%);
		animation: float 20s infinite ease-in-out alternate;
	}

	@keyframes float {
		0,
		100% {
			transform: translate(0, 0) rotate(0deg);
		}
		25% {
			transform: translate(-10px, -10px) rotate(-1deg);
		}
		50% {
			transform: translate(0, -20px) rotate(0deg);
		}
		75% {
			transform: translate(10px, -10px) rotate(1deg);
		}
	}

	/* Conteneur */
	.password-reset-container {
		width: 100%;
		max-width: 450px;
		padding: 1rem;
		position: relative;
		z-index: 1;
	}

	/* Carte */
	.auth-card {
		background: var(--card-bg);
		backdrop-filter: blur(10px);
		-webkit-backdrop-filter: blur(10px);
		border-radius: 16px;
		padding: 2.5rem;
		box-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);
		transform: translateY(0);
		transition: all 0.4s ease;
	}

	.auth-card:hover {
		transform: translateY(-5px);
		box-shadow: 0 20px 40px rgba(0, 0, 0, 0.6);
	}

	/* Logo */
	.auth-logo {
		text-align: center;
	}

	.logo-img {
		height: 60px;
		filter: drop-shadow(0 0 10px rgba(108, 92, 231, 0.3));
	}

	/* Titres */
	.auth-title {
		font-size: 1.8rem;
		text-align: center;
		margin-bottom: 0.5rem;
		color: var(--primary);
		font-weight: 600;
	}

	.auth-subtitle {
		color: var(--text-light);
		text-align: center;
		margin-bottom: 2rem;
		font-size: 0.95rem;
	}

	/* Formulaire */
	.auth-form {
		margin-top: 1.5rem;
	}

	.form-group {
		margin-bottom: 1.5rem;
		position: relative;
	}

	.password-input {
		position: relative;
	}

	.form-control {
		width: 100%;
		padding: 1rem 3rem 1rem 1rem;
		background: var(--input-bg);
		border: 1px solid var(--input-border);
		border-radius: 10px;
		color: var(--text);
		font-size: 1rem;
		transition: all 0.3s ease;
	}

	.form-control:focus {
		outline: none;
		border-color: var(--primary);
		box-shadow: 0 0 0 3px rgba(108, 92, 231, 0.5);
	}

	.password-input label {
		position: absolute;
		left: 1rem;
		top: 1rem;
		color: var(--text-light);
		pointer-events: none;
		transition: all 0.3s ease;
	}

	.form-control:focus + label,
	.form-control:not(:placeholder-shown) + label {
		transform: translateY(-1.75rem) scale(0.85);
		color: var(--primary);
		background: var(--card-bg);
		padding: 0 0.5rem;
		left: 0.5rem;
	}

	.toggle-password {
		position: absolute;
		right: 1rem;
		top: 1rem;
		background: none;
		border: none;
		color: var(--text-light);
		cursor: pointer;
		transition: all 0.3s ease;
	}

	.toggle-password:hover {
		color: var(--primary);
	}

	.password-strength {
		height: 4px;
		background: #eee;
		border-radius: 2px;
		margin-top: 0.5rem;
		overflow: hidden;
		position: relative;
	}

	.password-strength::before {
		content: '';
		position: absolute;
		left: 0;
		top: 0;
		height: 100%;
		width: 0;
		background: var(--primary);
		transition: width 0.3s ease;
	}

	/* Bouton */
	.btn-auth {
		width: 100%;
		padding: 1rem;
		background: linear-gradient(135deg, var(--primary), var(--primary-dark));
		color: white;
		border: none;
		border-radius: 10px;
		font-size: 1rem;
		font-weight: 600;
		cursor: pointer;
		transition: all 0.3s ease;
		display: flex;
		align-items: center;
		justify-content: center;
		gap: 0.75rem;
	}

	.btn-auth:hover {
		transform: translateY(-3px);
		box-shadow: 0 10px 25px rgba(108, 92, 231, 0.6);
	}

	.btn-auth svg {
		transition: transform 0.3s ease;
	}

	.btn-auth:hover svg {
		transform: translateX(5px);
	}

	/* Responsive */
	@media(max-width: 576px) {
		.auth-card {
			padding: 1.5rem;
		}

		.auth-title {
			font-size: 1.5rem;
		}

		.logo-img {
			height: 50px;
		}
	}
</style>

 <script>
	document.addEventListener('DOMContentLoaded', function() {
	  // Récupérer les deux champs de mot de passe
	  const passwordInput1 = document.getElementById('{{ resetForm.plainPassword.first.vars.id }}');
	  const passwordInput2 = document.getElementById('{{ resetForm.plainPassword.second.vars.id }}');
	
	  // Boutons pour afficher/masquer le mot de passe
	  const togglePassword1 = document.querySelector('.password-input:nth-child(1) .toggle-password');
	  const togglePassword2 = document.querySelector('.password-input:nth-child(2) .toggle-password');
	
	  // Fonction pour gérer l'affichage/masquage du mot de passe
	  function togglePasswordVisibility(passwordInput, passwordIcon) {
		const isPassword = passwordInput.type === 'password';
		passwordInput.type = isPassword ? 'text' : 'password';
		passwordIcon.style.color = isPassword ? 'var(--primary)' : 'var(--text-light)';
	  }
	
	  // Écouteurs d'événements pour les boutons de toggle
	  togglePassword1.addEventListener('click', function() {
		togglePasswordVisibility(passwordInput1, this.querySelector('svg'));
	  });
	
	  togglePassword2.addEventListener('click', function() {
		togglePasswordVisibility(passwordInput2, this.querySelector('svg'));
	  });
	
	  // Indicateur de force du mot de passe pour le premier champ
	  passwordInput1.addEventListener('input', function() {
		const strengthBar1 = document.querySelector('.password-input:nth-child(1) .password-strength');
		const strength = calculatePasswordStrength(this.value);
		strengthBar1.style.setProperty('--strength', strength + '%');
	  });
	
	  // Indicateur de force du mot de passe pour le deuxième champ
	  passwordInput2.addEventListener('input', function() {
		const strengthBar2 = document.querySelector('.password-input:nth-child(2) .password-strength');
		const strength = calculatePasswordStrength(this.value);
		strengthBar2.style.setProperty('--strength', strength + '%');
	  });
	
	  function calculatePasswordStrength(password) {
		let strength = 0;
		if (password.length > 0) strength += 20;
		if (password.length > 5) strength += 20;
		if (password.match(/[A-Z]/)) strength += 20;
		if (password.match(/[0-9]/)) strength += 20;
		if (password.match(/[^A-Za-z0-9]/)) strength += 20;
		return Math.min(strength, 100);
	  }
	});
	</script>{% endblock %}
