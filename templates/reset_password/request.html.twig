{% extends 'base.html.twig' %}

{% block title %}Réinitialiser votre mot de passe{% endblock %}

{% block body %}
    <div class="auth-wrapper">
        <!-- Background animé -->
        <div class="auth-bg">
            <div class="gradient"></div>
            <div class="particles"></div>
        </div>

        <div class="auth-container">
            <!-- Carte de réinitialisation -->
            <div class="auth-card">
                <!-- Logo (optionnel) -->
                <div class="auth-logo mb-4">
                    <img src="https://raw.githubusercontent.com/harissonola/my-cdn/main/img/bactrary-logo.png" alt="Logo" class="logo-img">
                </div>

                <h1 class="auth-title">Réinitialisation</h1>
                <p class="auth-subtitle">Entrez votre email pour recevoir le lien de réinitialisation</p>

                <!-- Div pour les messages AJAX -->
                <div id="ajax-message" style="display: none;"></div>

                {% for flash_error in app.flashes('reset_password_error') %}
                    <div class="alert-error">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewbox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <circle cx="12" cy="12" r="10"></circle>
                            <line x1="12" y1="8" x2="12" y2="12"></line>
                            <line x1="12" y1="16" x2="12.01" y2="16"></line>
                        </svg>
                        <span>{{ flash_error }}</span>
                    </div>
                {% endfor %}

                <!-- Formulaire -->
                {{ form_start(requestForm, {'attr': {'class': 'auth-form'} }) }}
                <div class="form-group">
                    <div class="input-wrapper">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewbox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                            <polyline points="22,6 12,13 2,6"></polyline>
                        </svg>
                        {{ form_widget(requestForm.email, {'attr': {'class': 'form-control', 'placeholder': ' '}}) }}
                        <label for="{{ requestForm.email.vars.id }}">Adresse email</label>
                    </div>
                </div>

                <button type="submit" class="btn-auth" id="submit-btn">
                    <span>Envoyer le lien</span>
                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewbox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <line x1="22" y1="2" x2="11" y2="13"></line>
                        <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
                    </svg>
                </button>
                {{ form_end(requestForm) }}

                <div class="auth-footer">
                    <a href="{{ path('app_login') }}" class="back-link">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewbox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <line x1="19" y1="12" x2="5" y2="12"></line>
                            <polyline points="12 19 5 12 12 5"></polyline>
                        </svg>
                        Retour à la connexion
                    </a>
                </div>
            </div>
        </div>
    </div>

    <style>
        :root {
            --primary: #6c5ce7;
            --primary-light: #a29bfe;
            --primary-dark: #5649c0;
            --error: #ff6b6b;
            --success: #2ed573;
            --text: #ffffff;
            --text-secondary: #b2b2b2;
            --bg-dark: #0f1521;
            --bg-darker: #0a0e17;
            --card-bg: rgba(26, 31, 53, 0.9);
            --input-bg: rgba(45, 45, 65, 0.6);
            --input-border: rgba(255, 255, 255, 0.1);
        }

        /* Structure de base */
        .auth-wrapper {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, var(--bg-darker) 0%, var(--bg-dark) 100%);
            color: var(--text);
            position: relative;
            overflow: hidden;
        }

        /* Background animé */
        .auth-bg {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 0;
        }

        .gradient {
            position: absolute;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, var(--bg-darker) 0%, var(--bg-dark) 100%);
        }

        .particles {
            position: absolute;
            width: 100%;
            height: 100%;
            background-image: radial-gradient(circle at 20% 30%, rgba(108, 92, 231, 0.15) 0%, transparent 25%), radial-gradient(circle at 80% 70%, rgba(0, 206, 201, 0.15) 0%, transparent 25%);
            animation: float 20s infinite ease-in-out alternate;
        }

        @keyframes float {
            0%,
            100% {
                transform: translate(0, 0) rotate(0deg);
            }
            25% {
                transform: translate(-10px, -10px) rotate(-1deg);
            }
            50% {
                transform: translate(0, -20px) rotate(0deg);
            }
            75% {
                transform: translate(10px, -10px) rotate(1deg);
            }
        }

        /* Conteneur */
        .auth-container {
            width: 100%;
            max-width: 450px;
            padding: 1rem;
            position: relative;
            z-index: 1;
        }

        /* Carte */
        .auth-card {
            background: var(--card-bg);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border-radius: 16px;
            padding: 2.5rem;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);
            border: 1px solid var(--input-border);
            transform: translateY(0);
            transition: all 0.4s ease;
        }

        .auth-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
        }

        /* Logo */
        .auth-logo {
            text-align: center;
        }

        .logo-img {
            height: 60px;
            filter: drop-shadow(0 0 10px rgba(108, 92, 231, 0.4));
        }

        /* Titres */
        .auth-title {
            font-size: 2rem;
            text-align: center;
            margin-bottom: 0.5rem;
            background: linear-gradient(90deg, var(--primary), var(--primary-light));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }

        .auth-subtitle {
            color: var(--text-secondary);
            text-align: center;
            margin-bottom: 2rem;
            font-size: 0.95rem;
        }

        /* Messages d'alerte */
        .alert-error, .alert-success {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 1.5rem;
            font-size: 0.9rem;
            animation: fadeIn 0.3s ease-in-out;
        }

        .alert-error {
            background: rgba(255, 107, 107, 0.15);
            color: var(--error);
            border-left: 4px solid var(--error);
        }

        .alert-success {
            background: rgba(46, 213, 115, 0.15);
            color: var(--success);
            border-left: 4px solid var(--success);
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Formulaire */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .input-wrapper {
            position: relative;
        }

        .input-wrapper svg {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-secondary);
            transition: all 0.3s ease;
        }

        .form-control {
            width: 100%;
            padding: 1rem 1rem 1rem 3rem;
            background: var(--input-bg);
            border: 1px solid var(--input-border);
            border-radius: 10px;
            color: var(--text);
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(108, 92, 231, 0.3);
        }

        .form-control:focus ~ svg {
            color: var(--primary);
        }

        .input-wrapper label {
            position: absolute;
            left: 3rem;
            top: 1rem;
            color: var(--text-secondary);
            pointer-events: none;
            transition: all 0.3s ease;
        }

        .form-control:focus + label,
        .form-control:not(:placeholder-shown) + label {
            transform: translateY(-1.75rem) translateX(-1.5rem) scale(0.85);
            color: var(--primary);
            background: var(--card-bg);
            padding: 0 0.5rem;
        }

        /* Bouton */
        .btn-auth {
            width: 100%;
            padding: 1rem;
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.75rem;
        }

        .btn-auth:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(108, 92, 231, 0.4);
        }

        .btn-auth svg {
            transition: transform 0.3s ease;
        }

        .btn-auth:hover svg {
            transform: translateX(5px);
        }

        .btn-auth:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        /* Pied de page */
        .auth-footer {
            text-align: center;
            margin-top: 1.5rem;
        }

        .back-link {
            color: var(--text-secondary);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
        }

        .back-link:hover {
            color: var(--primary-light);
        }

        /* État de chargement pour le bouton */
        .btn-loading {
            position: relative;
            pointer-events: none;
        }

        .btn-loading span {
            opacity: 0.5;
        }

        .btn-loading:after {
            content: "";
            position: absolute;
            width: 20px;
            height: 20px;
            border: 2px solid transparent;
            border-top-color: #ffffff;
            border-radius: 50%;
            animation: btn-spinner 0.8s linear infinite;
        }

        @keyframes btn-spinner {
            to {
                transform: rotate(360deg);
            }
        }

        /* Responsive */
        @media(max-width: 576px) {
            .auth-card {
                padding: 1.5rem;
            }

            .auth-title {
                font-size: 1.5rem;
            }

            .logo-img {
                height: 50px;
            }
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const resetForm = document.querySelector('.auth-form');
            const messageContainer = document.getElementById('ajax-message');
            const submitButton = document.getElementById('submit-btn');
            
            if (resetForm) {
                resetForm.addEventListener('submit', function(e) {
                    e.preventDefault(); // Empêcher l'envoi standard du formulaire
                    
                    // Récupérer l'email saisi
                    const emailInput = document.querySelector('[name="reset_password_request_form[email]"]');
                    
                    if (!emailInput.value.trim()) {
                        // Validation côté client
                        messageContainer.innerHTML = `
                            <div class="alert-error">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <line x1="12" y1="8" x2="12" y2="12"></line>
                                    <line x1="12" y1="16" x2="12.01" y2="16"></line>
                                </svg>
                                <span>Veuillez entrer une adresse email.</span>
                            </div>
                        `;
                        messageContainer.style.display = 'block';
                        return;
                    }
                    
                    // Créer FormData pour l'envoi
                    const formData = new FormData(resetForm);
                    
                    // Afficher l'état de chargement
                    const originalButtonContent = submitButton.innerHTML;
                    submitButton.innerHTML = '<span>Envoi en cours...</span>';
                    submitButton.classList.add('btn-loading');
                    submitButton.disabled = true;
                    
                    // Masquer l'ancien message s'il existe
                    messageContainer.style.display = 'none';
                    
                    // Envoyer la requête AJAX
                    fetch(resetForm.action, {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        // Réinitialiser le bouton
                        submitButton.innerHTML = originalButtonContent;
                        submitButton.classList.remove('btn-loading');
                        submitButton.disabled = false;
                        
                        // Afficher le message
                        if (data.success) {
                            messageContainer.innerHTML = `
                                <div class="alert-success">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                                        <polyline points="22 4 12 14.01 9 11.01"></polyline>
                                    </svg>
                                    <span>${data.message}</span>
                                </div>
                            `;
                            
                            // Vider le champ email
                            emailInput.value = '';
                            
                            // Rediriger vers la page de confirmation après un délai
                            setTimeout(() => {
                                window.location.href = '{{ path('app_check_email') }}';
                            }, 2000);
                        } else {
                            messageContainer.innerHTML = `
                                <div class="alert-error">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <circle cx="12" cy="12" r="10"></circle>
                                        <line x1="12" y1="8" x2="12" y2="12"></line>
                                        <line x1="12" y1="16" x2="12.01" y2="16"></line>
                                    </svg>
                                    <span>${data.message}</span>
                                </div>
                            `;
                        }
                        messageContainer.style.display = 'block';
                    })
                    .catch(error => {
                        // Réinitialiser le bouton
                        submitButton.innerHTML = originalButtonContent;
                        submitButton.classList.remove('btn-loading');
                        submitButton.disabled = false;
                        
                        // Afficher une erreur générique
                        messageContainer.innerHTML = `
                            <div class="alert-error">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <circle cx="12" cy="12" r="10"></circle>
                                    <line x1="12" y1="8" x2="12" y2="12"></line>
                                    <line x1="12" y1="16" x2="12.01" y2="16"></line>
                                </svg>
                                <span>Une erreur est survenue. Veuillez réessayer.</span>
                            </div>
                        `;
                        messageContainer.style.display = 'block';
                    });
                });
            }
        });
    </script>
{% endblock %}