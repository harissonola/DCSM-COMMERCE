{% extends 'base.html.twig' %}

{% block title %}Dépôt Crypto Sécurisé{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .deposit-container {
            max-width: 500px;
            margin: 2rem auto;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
            border: 1px solid #444;
            background: #1e1e1e;
            color: #e0e0e0;
        }
        .deposit-header {
            background: linear-gradient(135deg, #0d47a1 0%, #1976d2 100%);
            color: white;
            padding: 1.5rem;
            text-align: center;
            position: relative;
        }
        .deposit-header h3 {
            margin: 0;
            font-weight: 600;
        }
        .deposit-body {
            padding: 2rem;
        }
        .amount-display {
            background: #2d2d2d;
            border-radius: 8px;
            padding: 1.5rem;
            text-align: center;
            margin-bottom: 1.5rem;
            border: 1px solid #444;
        }
        .amount-display h4 {
            margin: 0;
            color: #64b5f6;
            font-weight: 700;
        }
        .qr-section {
            text-align: center;
            margin: 1.5rem 0;
            padding: 1.5rem;
            background: #252525;
            border-radius: 8px;
            border: 1px dashed #444;
        }
        .qr-section img {
            max-width: 200px;
            margin: 0 auto;
            background: white;
            padding: 10px;
            border-radius: 8px;
        }
        .address-section {
            margin: 1.5rem 0;
        }
        .address-box {
            background: #252525;
            border: 1px solid #444;
            border-radius: 8px;
            padding: 1rem;
            word-break: break-all;
            font-family: monospace;
            text-align: center;
            margin-bottom: 1rem;
            color: #bb86fc;
        }
        .timer-section {
            background: #332d00;
            border-left: 4px solid #ffc107;
            padding: 1rem;
            margin: 1.5rem 0;
            border-radius: 4px;
        }
        #countdown {
            font-weight: 700;
            color: #ff7043;
        }
        .instructions {
            font-size: 0.9rem;
            color: #a0a0a0;
            margin-top: 1.5rem;
        }
        .btn-copy {
            transition: all 0.3s;
            background-color: #1976d2;
            border-color: #1976d2;
        }
        .btn-copy:hover {
            background-color: #1565c0;
            border-color: #1565c0;
        }
        .btn-copy.copied {
            background-color: #388e3c !important;
            border-color: #388e3c !important;
        }
        .text-muted {
            color: #9e9e9e !important;
        }
        .alert-info {
            background-color: #0d344f;
            border-color: #0d47a1;
            color: #e0e0e0;
        }
        .alert-success {
            background-color: #1b5e20;
            border-color: #2e7d32;
            color: #e0e0e0;
        }
        .alert-danger {
            background-color: #5d1f1f;
            border-color: #c62828;
            color: #e0e0e0;
        }
        .progress {
            background-color: #333;
        }
        .progress-bar {
            background-color: #ffc107;
        }
    </style>
{% endblock %}

{% block body %}
<div class="deposit-container">
    <div class="deposit-header">
        <h3><i class="fas fa-lock"></i> Dépôt Sécurisé</h3>
    </div>
    
    <div class="deposit-body">
        <div class="amount-display">
            <h4>Montant à déposer : ${{ amount|number_format(2) }}</h4>
            <small class="text-muted">{{ network }}</small>
        </div>

        <div class="qr-section">
            <img src="{{ qrCodeUrl }}" alt="QR Code pour {{ depositAddress }}" 
                 onerror="this.onerror=null;this.src='{{ asset('img/default-qr.png') }}'">
            <p class="text-muted mt-2">Scanner pour envoyer depuis un wallet mobile</p>
        </div>

        <div class="address-section">
            <h5 class="text-center mb-3">Adresse de dépôt unique</h5>
            <div class="address-box">{{ depositAddress }}</div>
            <button class="btn btn-primary btn-block btn-copy" 
                    onclick="copyToClipboard('{{ depositAddress }}')"
                    id="copyButton">
                <i class="fas fa-copy"></i> Copier l'adresse
            </button>
            <small class="text-muted d-block text-center mt-2">
                <i class="fas fa-exclamation-circle"></i> N'envoyez que {{ network }} à cette adresse
            </small>
        </div>

        <div class="timer-section">
            <div class="d-flex justify-content-between align-items-center">
                <span><i class="fas fa-clock"></i> Temps restant :</span>
                <span id="countdown"></span>
            </div>
            <div class="progress mt-2" style="height: 5px;">
                <div id="progressBar" class="progress-bar" role="progressbar"></div>
            </div>
        </div>

        <div id="statusAlert" class="alert alert-info" style="display: none;">
            <div class="d-flex align-items-center">
                <i class="fas fa-spinner fa-spin me-2"></i>
                <span id="statusText">Vérification du dépôt en cours...</span>
            </div>
        </div>

        <div class="instructions">
            <p><strong>Instructions :</strong></p>
            <ol>
                <li>Copiez l'adresse ou scannez le QR code</li>
                <li>Envoyez exactement <strong>${{ amount|number_format(2) }}</strong> en {{ network }}</li>
                <li>Le système détectera automatiquement votre dépôt</li>
                <li>Votre solde sera crédité après confirmation</li>
            </ol>
            <p class="text-danger mt-2">
                <i class="fas fa-exclamation-triangle"></i> 
                N'envoyez pas d'autres cryptomonnaies à cette adresse, elles seraient perdues.
            </p>
        </div>
    </div>
</div>

<input type="hidden" id="initialExpiration" value="{{ initialExpiration }}">
<input type="hidden" id="csrfToken" value="{{ csrf_token('crypto_deposit') }}">
<input type="hidden" id="checkUrl" value="{{ path('app_check_crypto_deposit', {'id': transaction.id}) }}">

<script>
document.addEventListener('turbo:load', function() {
    // Compte à rebours persisté dans localStorage
    const initialExpiration = parseInt(document.getElementById('initialExpiration').value);
    const storageKey = 'depositExpiration_{{ transaction.id }}';
    
    // Récupérer ou initialiser le temps restant
    let remainingTime = localStorage.getItem(storageKey);
    if (!remainingTime || remainingTime > initialExpiration) {
        remainingTime = initialExpiration;
        localStorage.setItem(storageKey, remainingTime);
    }
    
    updateCountdown(remainingTime);
    
    function updateCountdown(seconds) {
        if (seconds <= 0) {
            document.getElementById('countdown').innerHTML = 'Expiré';
            document.getElementById('progressBar').style.width = '100%';
            document.getElementById('statusAlert').style.display = 'none';
            localStorage.removeItem(storageKey);
            return;
        }
        
        const hours = Math.floor(seconds / 3600);
        const minutes = Math.floor((seconds % 3600) / 60);
        const secs = seconds % 60;
        
        document.getElementById('countdown').textContent = `${hours}h ${minutes}m ${secs}s`;
        const progressPercent = 100 - (seconds / initialExpiration * 100);
        document.getElementById('progressBar').style.width = `${progressPercent}%`;
        
        // Mettre à jour le localStorage et programmer la prochaine mise à jour
        localStorage.setItem(storageKey, seconds - 1);
        setTimeout(() => updateCountdown(seconds - 1), 1000);
    }
    
    // Vérification automatique du dépôt
    checkDepositStatus();
});

function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(function() {
        const btn = document.getElementById('copyButton');
        btn.innerHTML = '<i class="fas fa-check"></i> Copié';
        btn.classList.add('copied');
        
        setTimeout(function() {
            btn.innerHTML = '<i class="fas fa-copy"></i> Copier l\'adresse';
            btn.classList.remove('copied');
        }, 2000);
    }).catch(function(err) {
        console.error('Erreur lors de la copie: ', err);
    });
}

function checkDepositStatus() {
    const statusAlert = document.getElementById('statusAlert');
    const statusText = document.getElementById('statusText');
    
    statusAlert.style.display = 'flex';
    
    fetch(document.getElementById('checkUrl').value, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-CSRF-TOKEN': document.getElementById('csrfToken').value
        },
        body: JSON.stringify({})
    })
    .then(response => {
        if (!response.ok) throw new Error('Erreur réseau');
        return response.json();
    })
    .then(data => {
        if (data.status === 'completed') {
            statusAlert.className = 'alert alert-success';
            statusText.innerHTML = '<i class="fas fa-check-circle me-2"></i> Dépôt confirmé ! Redirection...';
            localStorage.removeItem('depositExpiration_{{ transaction.id }}');
            
            setTimeout(() => {
                window.location.href = '{{ path('app_profile') }}';
            }, 2000);
        } else if (data.status === 'expired') {
            statusAlert.className = 'alert alert-danger';
            statusText.innerHTML = '<i class="fas fa-exclamation-circle me-2"></i> Dépôt expiré';
        } else {
            setTimeout(checkDepositStatus, 10000); // Vérifier toutes les 10 secondes
        }
    })
    .catch(error => {
        console.error('Erreur:', error);
        setTimeout(checkDepositStatus, 30000); // Réessayer après 30 secondes en cas d'erreur
    });
}
</script>
{% endblock %}