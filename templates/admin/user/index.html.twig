{% extends 'admin.html.twig' %}

{% block title %}Liste des Utilisateurs{% endblock %}

{% block body %}
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Utilisateurs</h5>
        <div class="d-flex">
            <a href="{{ path('admin_user_new') }}" class="btn btn-primary me-2">
                <i class="mdi mdi-plus me-1"></i> Nouvel utilisateur
            </a>
            <button class="btn btn-outline-secondary me-2" data-bs-toggle="modal" data-bs-target="#filterModal">
                <i class="mdi mdi-filter me-1"></i> Filtrer
            </button>
            <div class="btn-group">
                <button type="button" class="btn btn-success dropdown-toggle" data-bs-toggle="dropdown">
                    <i class="mdi mdi-download me-1"></i> Exporter
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li><a class="dropdown-item dt-export" data-type="excel" href="#"><i class="mdi mdi-file-excel me-2"></i>Excel</a></li>
                    <li><a class="dropdown-item dt-export" data-type="pdf" href="#"><i class="mdi mdi-file-pdf me-2"></i>PDF</a></li>
                    <li><a class="dropdown-item dt-export" data-type="print" href="#"><i class="mdi mdi-printer me-2"></i>Imprimer</a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover datatable">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Email</th>
                        <th>Nom</th>
                        <th>Solde</th>
                        <th>Rôles</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {% for user in users %}
                        <tr>
                            <td>{{ user.id }}</td>
                            <td>{{ user.email }}</td>
                            <td>{{ user.fname }} {{ user.lname }}</td>
                            <td data-order="{{ user.balance }}">{{ user.balance|format_currency('USD') }}</td>
                            <td data-search="{{ user.roles|join(',') }}">
                                <span class="badge bg-{{ 'ROLE_ADMIN' in user.roles ? 'danger' : 'primary' }}">
                                    {{ 'ROLE_ADMIN' in user.roles ? 'Administrateur' : 'Utilisateur' }}
                                </span>
                            </td>
                            <td>
                                <div class="d-flex">
                                    <a href="{{ path('admin_user_show', {'id': user.id}) }}" class="btn btn-sm btn-info me-2">
                                        <i class="mdi mdi-eye"></i>
                                    </a>
                                    <a href="{{ path('admin_user_edit', {'id': user.id}) }}" class="btn btn-sm btn-warning me-2">
                                        <i class="mdi mdi-pencil"></i>
                                    </a>
                                    <form method="post" action="{{ path('admin_user_delete', {'id': user.id}) }}">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ user.id) }}">
                                        <button class="btn btn-sm btn-danger" onclick="return confirmDelete(event)">
                                            <i class="mdi mdi-delete"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="6" class="text-center">Aucun utilisateur trouvé</td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal de filtrage -->
<div class="modal fade" id="filterModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Filtrer les utilisateurs</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="filterForm">
                    <div class="mb-3">
                        <label class="form-label">Rôle</label>
                        <select class="form-select" name="role">
                            <option value="">Tous</option>
                            <option value="ROLE_ADMIN">Administrateur</option>
                            <option value="ROLE_USER">Utilisateur</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Solde minimum</label>
                        <input type="number" class="form-control" name="minBalance" placeholder="$" step="0.01">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-label-secondary" data-bs-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-primary" id="applyFilters">Appliquer</button>
                <button type="button" class="btn btn-outline-danger" id="resetFilters">
                    <i class="mdi mdi-filter-remove me-1"></i> Réinitialiser
                </button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.print.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>

<script>
$(document).ready(function() {
    // Initialisation DataTable
    var table = $('.datatable').DataTable({
        dom: '<"top"<"row"<"col-md-6"B><"col-md-6"f>>><"bottom"rt><"row"<"col-md-5"i><"col-md-7"p>>',
        buttons: [
            {
                extend: 'excelHtml5',
                text: '<i class="mdi mdi-file-excel me-1"></i> Excel',
                className: 'btn btn-success btn-sm me-2',
                exportOptions: {
                    columns: ':not(:last-child)',
                    format: {
                        body: function(data, column, row) {
                            if (column === 3) return data.replace(/[^\d.-]/g, '');
                            if (column === 4) return $(data).text().trim();
                            return data;
                        }
                    }
                }
            },
            {
                extend: 'pdfHtml5',
                text: '<i class="mdi mdi-file-pdf me-1"></i> PDF',
                className: 'btn btn-danger btn-sm me-2',
                exportOptions: {
                    columns: ':not(:last-child)'
                },
                customize: function(doc) {
                    doc.defaultStyle.fontSize = 10;
                    doc.styles.tableHeader.fontSize = 11;
                    doc.pageMargins = [20, 20, 20, 20];
                }
            },
            {
                extend: 'print',
                text: '<i class="mdi mdi-printer me-1"></i> Imprimer',
                className: 'btn btn-info btn-sm',
                exportOptions: {
                    columns: ':not(:last-child)'
                }
            }
        ],
        language: {
            url: 'https://cdn.datatables.net/plug-ins/1.13.6/i18n/fr-FR.json'
        },
        columnDefs: [
            { 
                orderable: false, 
                targets: [5],
                searchable: false
            },
            {
                type: 'num',
                targets: [3]
            }
        ],
        initComplete: function() {
            $('.dt-buttons').removeClass('btn-group');
        }
    });

    // Gestion des exports via le menu déroulant
    $('.dt-export').click(function(e) {
        e.preventDefault();
        var type = $(this).data('type');
        if (type === 'excel') {
            table.button('.buttons-excelHtml5').trigger();
        } else if (type === 'pdf') {
            table.button('.buttons-pdfHtml5').trigger();
        } else if (type === 'print') {
            table.button('.buttons-print').trigger();
        }
    });

    // Variables pour les filtres
    var minBalanceFilter = '';
    var roleFilter = '';

    // Fonction de filtrage personnalisée
    $.fn.dataTable.ext.search.push(
        function(settings, data, dataIndex) {
            // Filtre par solde
            if (minBalanceFilter !== '') {
                var balance = parseFloat(data[3].replace(/[^\d.-]/g, '')) || 0;
                if (balance < minBalanceFilter) {
                    return false;
                }
            }
            
            // Filtre par rôle
            if (roleFilter !== '') {
                var roles = data[4];
                if (roles.indexOf(roleFilter) === -1) {
                    return false;
                }
            }
            
            return true;
        }
    );

    // Appliquer les filtres
    $('#applyFilters').click(function() {
        minBalanceFilter = $('input[name="minBalance"]').val() ? parseFloat($('input[name="minBalance"]').val()) : '';
        roleFilter = $('select[name="role"]').val();
        table.draw();
        $('#filterModal').modal('hide');
    });

    // Réinitialiser les filtres
    $('#resetFilters').click(function() {
        $('#filterForm')[0].reset();
        minBalanceFilter = '';
        roleFilter = '';
        table.draw();
        $('#filterModal').modal('hide');
    });

    // Confirmation suppression
    function confirmDelete(event) {
        event.preventDefault();
        var form = event.target.closest('form');
        
        Swal.fire({
            title: 'Confirmer la suppression',
            text: "Êtes-vous sûr de vouloir supprimer cet utilisateur?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Oui, supprimer',
            cancelButtonText: 'Annuler',
            customClass: {
                confirmButton: 'btn btn-primary me-3',
                cancelButton: 'btn btn-label-secondary'
            },
            buttonsStyling: false
        }).then((result) => {
            if (result.isConfirmed) {
                form.submit();
            }
        });
    }
});
</script>
{% endblock %}